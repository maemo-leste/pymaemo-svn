Index: evolution-python-0.0.1/src/evolution.defs
===================================================================
--- evolution-python-0.0.1.orig/src/evolution.defs	2007-06-22 17:16:29.000000000 -0300
+++ evolution-python-0.0.1/src/evolution.defs	2007-06-25 16:57:08.000000000 -0300
@@ -180,6 +180,19 @@
   )
 )
 
+; New get_book_view
+(define-method get_book_view
+  (of-object "EBook")
+  (c-name "e_book_get_book_view")
+  (return-type "gboolean")
+  (parameters
+    '("EBookQuery*" "query")
+    '("GList*" "requested_fields")
+    '("int" "max_results")
+    '("EBookView**" "book_view")
+    '("GError**" "error")
+  )
+)
 
 ;;------------------------------------------------------------------------------
 ;; evo-environment
Index: evolution-python-0.0.1/src/evolution.override
===================================================================
--- evolution-python-0.0.1.orig/src/evolution.override	2007-06-22 17:16:26.000000000 -0300
+++ evolution-python-0.0.1/src/evolution.override	2007-06-25 15:34:03.000000000 -0300
@@ -5,6 +5,7 @@
 #include <Python.h>
 #include "pygobject.h"
 
+
 #include "override_common.h"
 
 #include "evo-environment.h"
@@ -112,6 +113,60 @@
     
 }
 %%
+override e_book_get_book_view kwargs
+static PyObject *
+_wrap_e_book_get_book_view(PyGObject *self, PyObject *args, PyObject *kwargs)
+{
+    static char *kwlist[] = {"query", "fields", "max", NULL};
+    int results = 0;
+    PyObject *pyfields = NULL;
+    GList *fields = NULL;
+    char *query = NULL;
+    PyObject *ret = NULL;
+    int cret;
+    EBookView *view = NULL;
+    EBookQuery *equery = NULL;
+    GError *err = NULL;
+
+    if(!PyArg_ParseTupleAndKeywords(args, kwargs, "s|O!i:EBook.get_book_view",
+                                    kwlist, &query, &PyList_Type, &pyfields,
+                                    &results))
+        return NULL;
+
+    if (pyfields != NULL) {
+        /* Translating to glist */
+        int len;
+        int i;
+
+        len = PyList_Size(pyfields);
+
+        for(i = 0; i < len; i++){
+            PyObject *item;
+            item = PyList_GetItem(pyfields, i);
+
+            if(!PyString_Check(item)){
+                if(fields != NULL)
+                    g_list_free(fields);
+            }
+
+            fields = g_list_append(fields, PyString_AsString(item));
+        }
+    }
+
+    equery = e_book_query_from_string(query);
+    cret = e_book_get_book_view(E_BOOK(self->obj), equery, fields, results, &view, &err);
+
+    /* Create the bookview object */
+    ret = pygobject_new(G_OBJECT(view));
+
+    /* e_book_query_unref(equery); The book view gets the ownership of the ref */
+    if (fields != NULL)
+        g_list_free(fields);
+
+    Py_XINCREF(ret);
+    return ret;
+}
+%%
 override e_contact_new kwargs
 static int
 _wrap_e_contact_new(PyGObject *self, PyObject *args, PyObject *kwargs)
