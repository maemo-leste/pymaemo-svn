Index: gnome-python-2.18/gnomevfs/vfsmodule.c
===================================================================
--- gnome-python-2.18.orig/gnomevfs/vfsmodule.c	2007-04-04 09:26:03.000000000 -0300
+++ gnome-python-2.18/gnomevfs/vfsmodule.c	2007-04-04 09:26:14.000000000 -0300
@@ -7,7 +7,8 @@
 #include <libgnomevfs/gnome-vfs-resolve.h>
 #include <libgnomevfs/gnome-vfs-dns-sd.h>
 #include <libgnomevfs/gnome-vfs-async-ops.h>
-#include "pygnomevfsbonobo.h"
+/*INdT - Maemo doesn't use bonobo
+#include "pygnomevfsbonobo.h"*/
 
 static GHashTable *monitor_hash;
 static gint monitor_id_counter = 0;
@@ -67,6 +68,7 @@
 
 extern void pygvvolume_add_constants(PyObject *m);
 
+/*INdT - Maemo doesn't use bonobo
 static void
 pygvfs_lazy_load_pygnomevfsbonobo(void)
 {
@@ -74,7 +76,7 @@
     if (!pygnomevfs_module)
         pygnomevfs_module = pygnome_vfs_bonobo_init();
 }
-
+*/
 
 gboolean
 pygnome_vfs_result_check(GnomeVFSResult result)
@@ -951,8 +953,9 @@
        * python wrapper to the C structure */
     pygnome_vfs_xfer_progress_info_set(py_info, NULL);
 
+/*INdT - sometimes application crashes when trying to DECREF pyinfo. Threads are enabled at this point.
     Py_DECREF(py_info);
-
+*/
     if (callback_return == NULL) {
         PyErr_Print();
         pyg_gil_state_release(state);
@@ -1180,10 +1183,11 @@
 	return Py_BuildValue("(iN)", action->action_type,
 			     pygvfs_mime_application_new(action->action.application));
 
+/*INdT - Maemo doesn't use bonobo
     case GNOME_VFS_MIME_ACTION_TYPE_COMPONENT: {
         pygvfs_lazy_load_pygnomevfsbonobo();
         return pygnomevfs_bonobo_mime_component_action_new(action);
-    }
+    }*/
     default:
 	PyErr_SetString(PyExc_ValueError, "unknown action type returned");
 	return NULL;
@@ -2180,7 +2184,8 @@
     regconst(FILE_INFO_FIELDS_SYMLINK_NAME);
     regconst(FILE_INFO_FIELDS_MIME_TYPE);
     regconst(FILE_INFO_FIELDS_ACCESS);
-    regconst(FILE_INFO_FIELDS_IDS);
+/*INdT - Maemo doesn't have this field 
+    regconst(FILE_INFO_FIELDS_IDS);*/
     regconst(PERM_SUID);
     regconst(PERM_SGID);
     regconst(PERM_STICKY);
@@ -2202,7 +2207,8 @@
     regconst(FILE_INFO_FORCE_SLOW_MIME_TYPE);
     regconst(FILE_INFO_FOLLOW_LINKS);
     regconst(FILE_INFO_GET_ACCESS_RIGHTS);
-    regconst(FILE_INFO_NAME_ONLY);
+/*INdT - Maemo doesn't have this field 
+    regconst(FILE_INFO_NAME_ONLY);*/
     regconst(SET_FILE_INFO_NONE);
     regconst(SET_FILE_INFO_NAME);
     regconst(SET_FILE_INFO_PERMISSIONS);
@@ -2392,7 +2398,7 @@
 }
 
 DL_EXPORT(void)
-init_gnomevfs(void)
+initgnomevfs(void)
 {
     PyObject *m, *d, *o;
 
@@ -2407,7 +2413,7 @@
 	PyErr_SetString(PyExc_RuntimeError, "could not initialise gnomevfs");
 	return;
     }
-
+    
     if (PyType_Ready(&PyGnomeVFSURI_Type) < 0)
 	return;
     if (PyType_Ready(&PyGnomeVFSContext_Type) < 0)
@@ -2421,7 +2427,9 @@
     if (PyType_Ready(&PyGnomeVFSXferProgressInfo_Type) < 0)
 	return;
 
-    m = Py_InitModule("gnomevfs._gnomevfs", pygnomevfs_functions);
+/*INdT - init correct module
+    m = Py_InitModule("gnomevfs._gnomevfs", pygnomevfs_functions);*/
+    m = Py_InitModule("gnomevfs", pygnomevfs_functions);
     d = PyModule_GetDict(m);
 
     register_constants(m);
