diff -Naur pycairo-1.4.12_old/cairo/pycairo-surface.c pycairo-1.4.12_new/cairo/pycairo-surface.c
--- pycairo-1.4.12_old/cairo/pycairo-surface.c	2007-12-10 22:49:03.000000000 -0400
+++ pycairo-1.4.12_new/cairo/pycairo-surface.c	2009-03-03 08:16:35.000000000 -0400
@@ -504,8 +504,8 @@
 
 
 /* Buffer interface functions, used by ImageSurface.get_data() */
-static int
-image_surface_buffer_getreadbuf (PycairoImageSurface *o, int segment,
+static Py_ssize_t
+image_surface_buffer_getreadbuf (PycairoImageSurface *o, Py_ssize_t segment,
 				 const void **ptr)
 {
     cairo_surface_t *surface = o->surface;
@@ -522,8 +522,8 @@
     return height * stride;
 }
 
-static int
-image_surface_buffer_getwritebuf (PycairoImageSurface *o, int segment,
+static Py_ssize_t
+image_surface_buffer_getwritebuf (PycairoImageSurface *o, Py_ssize_t segment,
 				  const void **ptr)
 {
     cairo_surface_t *surface = o->surface;
@@ -540,25 +540,43 @@
     return height * stride;
 }
 
-static int
-image_surface_buffer_getsegcount (PycairoImageSurface *o, int *lenp)
+static Py_ssize_t
+image_surface_buffer_getsegcount (PycairoImageSurface *o, Py_ssize_t *lenp)
 {
     if (lenp) {
 	/* report the sum of the sizes (in bytes) of all segments */
 	cairo_surface_t *surface = o->surface;
 	int height = cairo_image_surface_get_height (surface);
 	int stride = cairo_image_surface_get_stride (surface);
-	*lenp = height * stride;
+	*lenp = (Py_ssize_t) height * stride;
     }
     return 1;  /* surface data is all in one segment */
 }
 
+static Py_ssize_t
+image_surface_buffer_getcharbuf (PycairoImageSurface *o, Py_ssize_t segment,
+				  const char **ptr)
+{
+    cairo_surface_t *surface = o->surface;
+    int height, stride;
+
+    if (segment != 0) {
+	PyErr_SetString(PyExc_SystemError,
+			"accessing non-existent ImageSurface segment");
+	return -1;
+    }
+    height = cairo_image_surface_get_height (surface);
+    stride = cairo_image_surface_get_stride (surface);
+    *ptr = (char *) cairo_image_surface_get_data (surface);
+    return height * stride;
+}
+
 /* See Python C API Manual 10.7 */
 static PyBufferProcs image_surface_as_buffer = {
     (readbufferproc) image_surface_buffer_getreadbuf,
     (writebufferproc)image_surface_buffer_getwritebuf,
     (segcountproc)   image_surface_buffer_getsegcount,
-    (charbufferproc) NULL,
+    (charbufferproc) image_surface_buffer_getcharbuf,
 };
 
 static PyMethodDef image_surface_methods[] = {
diff -Naur pycairo-1.4.12_old/debian/changelog pycairo-1.4.12_new/debian/changelog
--- pycairo-1.4.12_old/debian/changelog	2009-03-03 08:03:37.000000000 -0400
+++ pycairo-1.4.12_new/debian/changelog	2009-03-03 08:16:35.000000000 -0400
@@ -1,3 +1,12 @@
+pycairo (1.4.12-1.2) unstable; urgency=low
+
+  * Non-maintainer upload.
+  * Python 2.5 compatibility of Image buffer interface.
+    (needed e.g. for interaction with python-pygame).
+    Closes: #481506
+
+ -- Thomas Viehmann <tv@beamnet.de>  Tue, 13 Jan 2009 22:51:49 +0100
+
 pycairo (1.4.12-1.1) unstable; urgency=low
 
   * NMU.
