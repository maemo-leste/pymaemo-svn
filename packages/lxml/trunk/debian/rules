#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

PYVERS	:= $(shell pyversions -vs)
PYVER   := $(shell pyversions -vd)

UPSTREAMVER := $(subst lxml-,,$(notdir $(CURDIR)))

DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

with_dbg = no

ifneq ($(with_dbg),yes)
NOPKGS += -Npython-lxml-dbg
endif

export DH_OPTIONS = $(NOPKGS)

ifeq ($(DEB_BUILD_ARCH),armel)
    CFLAGS="-Os -mthumb -mfloat-abi=softfp -Wall -Wstrict-prototypes"
else
    CFLAGS="-O2 -Wall -Wstrict-prototypes"
endif



prebuild: prebuild-stamp
prebuild-stamp: src/lxml/lxml.etree.pyx src/lxml/lxml.objectify.pyx
	cython src/lxml/lxml.etree.pyx src/lxml/lxml.objectify.pyx
	touch $@

build: build-stamp
build-stamp: $(PYVERS:%=build-python%) $(PYVERS:%=dbg-build-python%)
	touch $@
build-python%: prebuild
	CFLAGS=$(CFLAGS) python$* setup.py build
	touch $@

ifeq ($(with_dbg),yes)
dbg-build-python%: prebuild
	CFLAGS=$(CFLAGS) python$*-dbg setup.py build
	touch $@
else
dbg-build-python%: 
	
endif
clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp build-python* dbg-build-python* prebuild-stamp
	rm -rf build dist
	rm -f src/lxml/lxml.etree_api.h src/lxml/lxml.etree.c \
	      src/lxml/lxml.etree.h src/lxml/lxml.objectify.c

	-find -name '*.py[co]' | xargs rm -f
	dh_clean 

install: build install-prereq $(PYVERS:%=install-python%) $(PYVERS:%=dbg-install-python%)
	-find debian -name '*.py[co]' | xargs rm -f

install-prereq:
	dh_testdir
	dh_testroot
	dh_clean -k

install-python%:
	mkdir -p debian/python-lxml/usr/bin
	mkdir -p debian/python-lxml/usr/lib/python$*/site-packages
	python$* setup.py install \
		--root=$(CURDIR)/debian/python-lxml

ifeq ($(with_dbg),yes)
dbg-install-python%:
	mkdir -p debian/python-lxml/usr/bin
	mkdir -p debian/python-lxml-dbg/usr/lib/python$*/site-packages
	python$*-dbg setup.py install \
		--root=$(CURDIR)/debian/python-lxml-dbg
	find debian/python-*-dbg ! -type d ! -name '*.so' | xargs rm -f
	find debian/python-*-dbg -depth -empty -exec rmdir {} \;
else
dbg-install-python%:
	
endif

# Build architecture-independent files here.
binary-indep: build install
# nothing to do

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs -a CHANGES.txt
	dh_installdocs -a \
		CREDITS.txt README.txt TODO.txt doc/*.*
	dh_installexamples -a samples/*
ifeq ($(with_dbg),yes)
	dh_strip -ppython-lxml --dbg-package=python-lxml-dbg
else
	dh_strip -ppython-lxml
endif

	rm -rf debian/python-lxml-dbg/usr/share/doc/python-lxml-dbg
ifeq ($(with_dbg),yes)
	ln -s python-lxml debian/python-lxml-dbg/usr/share/doc/python-lxml-dbg
endif
	dh_compress -a -X.xml -X.py
	dh_fixperms -a
	dh_pycentral -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
